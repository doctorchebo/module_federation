image: node:14.15.3

stages:
    - build
    - quality
    - docker-build-production
    - docker-build-uat

build_react:
    stage: build
    script:
        - echo "Building deploy package"
        - npm install
        - npm build
        - echo "Build successful"
    artifacts:
        expire_in: 1 hour
        paths:
            - build
            - node_modules/

cache:
    paths:
        - node_modules/

test:
    stage: quality
    script:
        - npm test
    coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

lint:
    stage: quality
    script:
        - npx eslint ./src --ext .jsx --ext .js
        - npx stylelint "**/*.css"

docker-build-production:
    stage: docker-build-production
    image:
        name: docker:19.03.12
    services:
        - name: docker:19.03.12-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
        PIPELINE_DATE: "$CI_PIPELINE_CREATED_AT"
    before_script:
        - . set_tag.sh $PIPELINE_DATE
        - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    script:
        - docker build --build-arg REACT_APP_NODE_ENV=production . -t $CI_REGISTRY_IMAGE:$PROD_IMAGE_TAG
        - docker push $CI_REGISTRY_IMAGE:$PROD_IMAGE_TAG
    only:
        - develop

docker-build-uat:
    stage: docker-build-uat
    image:
        name: docker:19.03.12
    services:
        - name: docker:19.03.12-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
        PIPELINE_DATE: "$CI_PIPELINE_CREATED_AT"
    before_script:
        - . set_tag.sh $PIPELINE_DATE
        - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    script:
        - docker build --build-arg REACT_APP_NODE_ENV=uat . -t $CI_REGISTRY_IMAGE:$UAT_IMAGE_TAG
        - docker push $CI_REGISTRY_IMAGE:$UAT_IMAGE_TAG
    only:
        - master
